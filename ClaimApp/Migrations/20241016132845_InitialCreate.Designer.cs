// <auto-generated />
using System;
using ClaimApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace claimApp.Migrations
{
    [DbContext(typeof(ClaimAppContext))]
    [Migration("20241016132845_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClaimApp.Models.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HoursWorked")
                        .HasColumnType("int");

                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.Property<string>("LecturerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RatePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("ClaimApp.Models.Coordinator", b =>
                {
                    b.Property<int>("CoordinatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoordinatorId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoordinatorId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Coordinators");

                    b.HasData(
                        new
                        {
                            CoordinatorId = 1,
                            Email = "charlie.davis@example.com",
                            FirstName = "Charlie",
                            LastName = "Davis",
                            ManagerId = 1,
                            Password = "Password5"
                        },
                        new
                        {
                            CoordinatorId = 2,
                            Email = "dana.white@example.com",
                            FirstName = "Dana",
                            LastName = "White",
                            ManagerId = 2,
                            Password = "Password6"
                        });
                });

            modelBuilder.Entity("ClaimApp.Models.Lecturer", b =>
                {
                    b.Property<int>("LecturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LecturerId"));

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LecturerId");

                    b.ToTable("Lecturers");

                    b.HasData(
                        new
                        {
                            LecturerId = 1,
                            Department = "Computer Science",
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "Password1",
                            Phone = "0716290194"
                        },
                        new
                        {
                            LecturerId = 2,
                            Department = "Mathematics",
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Password = "Password2",
                            Phone = "0716290194"
                        });
                });

            modelBuilder.Entity("ClaimApp.Models.LecturerApplication", b =>
                {
                    b.Property<int>("LecturerApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LecturerApplicationId"));

                    b.Property<int>("CoordinatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("LecturerApplicationId");

                    b.HasIndex("CoordinatorId");

                    b.HasIndex("LecturerId");

                    b.HasIndex("ManagerId");

                    b.ToTable("LecturerApplications");
                });

            modelBuilder.Entity("ClaimApp.Models.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManagerId");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            ManagerId = 1,
                            Email = "alice.johnson@example.com",
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Password = "Password3"
                        },
                        new
                        {
                            ManagerId = 2,
                            Email = "bob.brown@example.com",
                            FirstName = "Bob",
                            LastName = "Brown",
                            Password = "Password4"
                        });
                });

            modelBuilder.Entity("ClaimApp.Models.ModuleEntry", b =>
                {
                    b.Property<int>("ModuleEntryId")
                        .HasColumnType("int");

                    b.Property<int>("HoursWorked")
                        .HasColumnType("int");

                    b.Property<int>("LecturerApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RatePerHour")
                        .HasColumnType("float");

                    b.HasKey("ModuleEntryId");

                    b.HasIndex("LecturerApplicationId");

                    b.ToTable("ModuleEntries");
                });

            modelBuilder.Entity("ClaimApp.Models.Claim", b =>
                {
                    b.HasOne("ClaimApp.Models.Lecturer", "Lecturer")
                        .WithMany("Claims")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("ClaimApp.Models.Coordinator", b =>
                {
                    b.HasOne("ClaimApp.Models.Manager", "Manager")
                        .WithMany("Coordinators")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("ClaimApp.Models.LecturerApplication", b =>
                {
                    b.HasOne("ClaimApp.Models.Coordinator", "Coordinator")
                        .WithMany("Applications")
                        .HasForeignKey("CoordinatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClaimApp.Models.Lecturer", "Lecturer")
                        .WithMany("Applications")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaimApp.Models.Manager", "Manager")
                        .WithMany("Applications")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coordinator");

                    b.Navigation("Lecturer");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("ClaimApp.Models.ModuleEntry", b =>
                {
                    b.HasOne("ClaimApp.Models.LecturerApplication", "LecturerApplication")
                        .WithMany()
                        .HasForeignKey("LecturerApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaimApp.Models.LecturerApplication", null)
                        .WithMany("Modules")
                        .HasForeignKey("ModuleEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LecturerApplication");
                });

            modelBuilder.Entity("ClaimApp.Models.Coordinator", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ClaimApp.Models.Lecturer", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Claims");
                });

            modelBuilder.Entity("ClaimApp.Models.LecturerApplication", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("ClaimApp.Models.Manager", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Coordinators");
                });
#pragma warning restore 612, 618
        }
    }
}
